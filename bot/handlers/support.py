import logging
from pyrogram import Client, filters
from pyrogram.types import Message, CallbackQuery, InlineKeyboardButton, InlineKeyboardMarkup
from pyrogram.handlers import MessageHandler, CallbackQueryHandler
from config import ADMIN_ID

# In-memory store for active support chats. {user_id: admin_id}
# A proper implementation might use a database for this.
active_support_chats = {}

class SupportHandlers:
    def __init__(self):
        # Admin ID is crucial for this feature
        self.admin_id = int(ADMIN_ID)

    def get_handlers(self):
        return [
            CallbackQueryHandler(self.initiate_support, filters.regex("^support$")),
            CallbackQueryHandler(self.close_support, filters.regex("^close_support$")),
            MessageHandler(self.user_to_admin_handler, filters.private & ~filters.command & ~filters.user(self.admin_id)),
            MessageHandler(self.admin_to_user_handler, filters.private & filters.user(self.admin_id) & filters.reply),
        ]

    async def initiate_support(self, client: Client, callback_query: CallbackQuery):
        user_id = callback_query.from_user.id
        active_support_chats[user_id] = self.admin_id
        await callback_query.message.edit_text(
            "–í—ã –≤–æ—à–ª–∏ –≤ —á–∞—Ç —Å —Ç–µ—Ö–ø–æ–¥–¥–µ—Ä–∂–∫–æ–π. –ù–∞–ø–∏—à–∏—Ç–µ –≤–∞—à–µ —Å–æ–æ–±—â–µ–Ω–∏–µ.\n"
            "–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä –æ—Ç–≤–µ—Ç–∏—Ç –≤–∞–º –∑–¥–µ—Å—å, –∫–∞–∫ —Ç–æ–ª—å–∫–æ —Å–º–æ–∂–µ—Ç.",
            reply_markup=InlineKeyboardMarkup([[
                InlineKeyboardButton("‚ùå –ó–∞–∫—Ä—ã—Ç—å —á–∞—Ç", callback_data="close_support")
            ]])
        )
        await callback_query.answer()

    async def close_support(self, client: Client, callback_query: CallbackQuery):
        user_id = callback_query.from_user.id
        if user_id in active_support_chats:
            del active_support_chats[user_id]
        await callback_query.message.edit_text(
            "–ß–∞—Ç —Å —Ç–µ—Ö–ø–æ–¥–¥–µ—Ä–∂–∫–æ–π –∑–∞–∫—Ä—ã—Ç. –í—ã –≤–µ—Ä–Ω—É–ª–∏—Å—å –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é.",
            reply_markup=InlineKeyboardMarkup([[
                InlineKeyboardButton("‚¨ÖÔ∏è –ù–∞–∑–∞–¥ –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", callback_data="main_menu")
            ]])
        )
        await callback_query.answer("–ß–∞—Ç –∑–∞–∫—Ä—ã—Ç.")

    async def user_to_admin_handler(self, client: Client, message: Message):
        user_id = message.from_user.id
        if user_id in active_support_chats:
            admin_id = active_support_chats[user_id]
            try:
                forwarded_message = await message.forward(admin_id)
                await client.send_message(
                    admin_id,
                    f"üëÜ –ù–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ —Ç–µ—Ö–ø–æ–¥–¥–µ—Ä–∂–∫—É –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è ID: `{user_id}`. –û—Ç–≤–µ—Ç—å—Ç–µ –Ω–∞ —ç—Ç–æ —Å–æ–æ–±—â–µ–Ω–∏–µ, —á—Ç–æ–±—ã –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –æ—Ç–≤–µ—Ç.",
                    reply_to_message_id=forwarded_message.id
                )
                await message.reply_text("–í–∞—à–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –±—ã–ª–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –≤ —Ç–µ—Ö–ø–æ–¥–¥–µ—Ä–∂–∫—É.")
            except Exception as e:
                logging.error(f"–ù–µ —É–¥–∞–ª–æ—Å—å –ø–µ—Ä–µ—Å–ª–∞—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç {user_id} –∫ {admin_id}: {e}")
                await message.reply_text("–ò–∑–≤–∏–Ω–∏—Ç–µ, –Ω–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –≤–∞—à–µ —Å–æ–æ–±—â–µ–Ω–∏–µ. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.")

    async def admin_to_user_handler(self, client: Client, message: Message):
        if message.reply_to_message and message.reply_to_message.forward_from:
            user_id = message.reply_to_message.forward_from.id
            if user_id in active_support_chats:
                try:
                    await client.send_message(user_id, f"**–û—Ç–≤–µ—Ç –æ—Ç —Ç–µ—Ö–ø–æ–¥–¥–µ—Ä–∂–∫–∏:**\n{message.text}")
                    await message.react("‚úÖ")
                except Exception as e:
                    logging.error(f"–ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –æ—Ç–≤–µ—Ç –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é {user_id}: {e}")
                    await message.reply_text(f"–ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é {user_id}. –í–æ–∑–º–æ–∂–Ω–æ, –æ–Ω –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–ª –±–æ—Ç–∞.")
